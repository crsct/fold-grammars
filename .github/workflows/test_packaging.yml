name: build

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        task:
          [
            [acms, aCMs],
            [shapes, RNAshapes],
            [pkiss, pKiss],
            [palikiss, pAliKiss],
            [rapidshapes, RapidShapes],
            [alishapes, RNAalishapes],
            [knotin, Knotinframe],
            [cofold, RNAcofold],
            [hybrid, RNAhybrid],
          ]
    steps:
      - name: Add PPA
        run: sudo add-apt-repository ppa:janssenlab/software
      - name: update apt
        run: sudo apt-get update
      - name: Install dependencies
        run: sudo apt-get install gapc

      - name: Make Application
        run: make build-${{ matrix.task[0] }}
      - name: Package Application
        run: |
          cd ${{ github.workspace }}/Misc/Applications/${{ matrix.task[1] }}
          mkdir -p .debpkg/usr/{bin,lib}/
          if [ -e ${{ matrix.task[1] }} ]; then
            cp ${{ matrix.task[1] }} .debpkg/usr/bin
          fi
          cp x86_64-linux-gnu/* .debpkg/usr/bin
          cp -r ../lib/foldGrammars .debpkg/usr/lib
          cp ../addRNAoptions.pl .debpkg/usr/bin
          mkdir -p .debpkg/DEBIAN

      - uses: jiro4989/build-deb-action@v3
        id: build_deb
        with:
          package: ${{ matrix.task[1] }}
          package_root: ${{ github.workspace }}/Misc/Applications/${{ matrix.task[1] }}/.debpkg
          maintainer: To Be Determined
          version: ${{  github.ref_name }}
          arch: "amd64"
          depends: "perl"
          desc: "This is the ${{ matrix.task[1] }} package of fold-grammars."

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./${{ steps.build_deb.outputs.file_name }}
          asset_name: ${{ steps.build_deb.outputs.file_name }}
          asset_content_type: application/vnd.debian.binary-package
